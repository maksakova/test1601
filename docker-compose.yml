version: "3.7"

services:
    app:
        image: "laratest/app:${TAG:-latest}"
        build:
            args:
                user: testusr
                uid: 1000
            context: ./
            dockerfile: Dockerfile
        container_name: app
        restart: unless-stopped
        working_dir: /var/www/
        volumes:
            - ./:/var/www
        networks:
            - network

    web:
        image: "scout3030/web:${TAG:-latest}"
        build:
            context: ./
            dockerfile: docker-compose/nginx.dockerfile
        container_name: nginx
        restart: unless-stopped
        ports:
            - ${SERVER_PORT:-80}:80
            - ${SERVER_PORT_SSL:-443}:443
        volumes:
            - ./:/var/www
            - ./docker-compose/nginx:/etc/nginx/conf.d/
        networks:
            - network

    pgsql:
        image: postgres:9.6
        container_name: pgsql
        restart: unless-stopped
        expose:
            - 5432
        ports:
            - ${DB_PORT:-5432}:5432
        volumes:
            - dbpgsql:/docker-entrypoint-initdb.d/
        environment:
            POSTGRES_HOST: ${DB_HOST:-pgsql}
            POSTGRES_USER: ${DB_USERNAME:-postgres}
            POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
            POSTGRES_DB: ${DB_DATABASE:-postgres}
        networks:
            - network

    redis:
        image: "redis:alpine"
        container_name: redis
        ports:
            - "6379:6379"
        networks:
            - network

networks:
    network:
        driver: bridge

volumes:
    dbpgsql:
